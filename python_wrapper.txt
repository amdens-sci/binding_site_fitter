import ctypes
import numpy as np
from numpy.ctypeslib import ndpointer

lib = ctypes.cdll.LoadLibrary('mylib.dll')
fun = lib.find_roots
fun.restype = None
fun.argtypes = [ndpointer(ctypes.c_double, flags="C_CONTIGUOUS"),
		ctypes.c_int, ctypes.c_int,
		ndpointer(np.complex128, flags="C_CONTIGUOUS")]


rootfind_testmatrix = np.zeros((100000,6))
for i in range(0, rootfind_testmatrix.shape[0]):
	rootfind_testmatrix[i,:] = 100*(np.random.random(6)-0.5)

nptester = np.flip(rootfind_testmatrix, axis=1)

def testmine(array_to_judge):
	output_array = np.zeros((array_to_judge.shape[0],array_to_judge.shape[1]-1), dtype=np.complex128)
	fun(array_to_judge, array_to_judge.shape[0], array_to_judge.shape[1], output_array)
	return output_array


def testtheirs(nptester):
	output_array = np.zeros((nptester.shape[0],nptester.shape[1]-1), dtype=np.complex128)
	assert output_array.flags['C_CONTIGUOUS']
	for i in range(0, nptester.shape[0]):
		output_array[i,:] = np.roots(nptester[i,:])
	return output_array


scam = np.sort(testmine(rootfind_testmatrix),axis=1)
scam2 = np.sort(testtheirs(nptester), axis=1)

norms = np.zeros((scam.shape[0]))
for i in range(0, scam.shape[0]):
	norms[i] = np.linalg.norm(scam[i,:] - scam2[i,:])


import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot(norms, bins=100, kde=False)
plt.title("Difference between roots as estimated by Numpy's np.roots and\nmy root finder program")
plt.xlabel('Vector norm')
plt.ylabel('Num observations')
plt.show()



g++ -shared -o mylib.dll root_eater.c -mstackrealign -O4